Tuần 5 +6
1.iv;
2.ii,iv;
3.ii;
4,i;
5,iii;
6,iii;
7,iii;
8,ii,iii;
9,ii;
10 ii;
11 iii;
12 iv;
13 iii;
14 iii;
15 i
16 iii
17 iv;
18 iv;
19 iii , iv;
20 iii;
Tuần 7
bool Check(bool a,bool b, bool c){


 return (a && b)||(b &&c)||(c && a);
 bool eq(int a[], int b[], int k)
  {
    for(int i=0; i <k;i++){
        if(a[i]!=b[i]){return false;}
        
    }
    return true;  
  }
3.1000
4.1717
5. int Min(int a, int b, int c, int d)
  {
      int minx = (a<b) ? a :b;
      minx= (minx < c) ? minx :c;
      minx=(minx < d) ? minx :d;

      return minx;
  }
6.không cho ra kết quả gì 
7.D
8.A
9.D
10.B
11. D
12.B
13.D
14.D
15B
16D
17A
18B
19B
20C
21B
22C
23A
24A
25B,C,D
26B

tuần 8
B 1. output là
B và địa chỉ của d là 0x5678
A và địa chỉ của c là 0x1234
in ra giá trị B và địa chỉ của c là 0x1234

2.*p = 5
3.sai kiểu dữ liệu

1 ii
2 iii
3 iv
7 iii




#include <bits/stdc++.h>
using namespace std;
 void reverse(char *s,int c){

   for(int i =0; i < c/2;i++){
     swap(s[i],s[c-i-1]);

   }
 s[c]='\0';

 }
int main(){
  char s[]= "Hello";
    int c = sizeof(s)/sizeof(char)-1;
  cout << s << endl;
  reverse(s,c);
  cout << s << endl;
}
 void delete_char(char s[], char c, int n)
 {
    for(int i =0; i < n; i++)
    {
        if(s[i]== c){
            for(int j = i ; j < c-1; j++){
                s[j]= s[j+1];
            }
            c--;
            s[c]='\0';

        }
    }
 }
#include <iostream>
using namespace std;
int  strlen(char c[]){
   int i =0;
  while(c[i] != '\0'){i++;}
  return i;

}
void pad_right(char a[], int n){
  int c = strlen(a);
  if(c >= n ){}
  for(int i = c ; i < n; i++){
    a[i] = '_';

  }
 a[n] = '\0';

}
int main(){
  char s[] ="helllo";
  pad_right(s,10);
  cout << s << endl;



}
#include <iostream>
using namespace std;
int  strlen(char c[]){
   int i =0;
  while(c[i] != '\0'){i++;}
  return i;

}
void reverse(char a[]){
  int c = strlen(a);

  for(int i = 0; i < c/2;i++)
  {
     char temp = a[i];
     a[i]= a[c-1-i];
     a[c-1-i] = temp;
  }


}
void pad_left(char a[], int n){
  int c = strlen(a);
  if(c >= n ){return ;}
  reverse(a);
  for(int i = c ; i < n; i++){
    a[i] = '_';

  }
 a[n]= '\0';
 reverse(a);



}
int main(){
  char s[] ="helllo";
  pad_left(s,10);
  cout << s << endl;



}
#include <iostream>
using namespace std;
int  strlen(char c[]){
   int i =0;
  while(c[i] != '\0'){i++;}
  return i;

}

 void truncate(char a[], int n)
 {
     int c = strlen(a);
     if(c <= n){return ;}
     a[n]='\0';
 }



int main(){
  char s[] ="helllo";
 truncate(s,4);

  cout << s << endl;



}
#include <iostream>
using namespace std;
int  strlen(char c[]){
   int i =0;
  while(c[i] != '\0'){i++;}
  return i;

}


 void trim_left(char a[]){
   int c = strlen(a);
   for(int i =0 ; i < c; i++)
   {
   if(a[i]== ' '){
      for(int j = i; j < c-1 ;j++)
      {
          a[j]=a[j+1];
      }
     c--;

   }
   a[c] = '\0';
   }


 }



int main(){
  char s[] ="   helllo";
 trim_left(s);

  cout << s << endl;



}

#include <iostream>
using namespace std;
int  strlen(char c[]){
   int i =0;
  while(c[i] != '\0'){i++;}
  return i;

}


 void trim_right(char a[]){
   int c = strlen(a),k;
   for(int i =0 ; i < c; i++)
   {
   if(a[i]== ' '){
       k = i;
      break;
   }

   }
  a[k] = '\0';

 }



int main(){
  char s[] ="helllo    ";
 trim_right(s);

  cout << s << endl;



}